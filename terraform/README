
    Запущено создание кластера Kubernetes через web-консоль Google Cloud
    Подготовлен контекст для подключения к кластеру gcloud container clusters get-credentials your-first-cluster-1 --zone europe-west3-b --project docker-123456
    Убедился что в качестве текущего контекста выставлен контекст для подключения к кластеру GKE kubectl config current-context
    Создан dev namespace kubectl apply -f ./kubernetes/reddit/dev-namespace.yml
    Приложение задеплоено в namespace dev kubectl apply -f ./kubernetes/reddit/ -n dev
    Добавлено правило разрешающее доступ по портам 30000-32767
    Получены внешние адреса нод кластера kubectl get nodes -o wide
    Получен порт публикации сервиса ui kubectl describe service ui -n dev | grep NodePort
    Убедился, что сервис доступен по адресу http://<node-ip>:<NodePort>

proofpic

    Для кластера в GKE включен Dashboard (Cluster - Edit - Addons - Dashboard)
    Запустил kubectl proxy, ui доступен http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login
    Добавлены права для сервисного аккаунта kubectl create clusterrolebinding kubernetes-dashboard --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard
    Залогинился с токеном из kubectl config view

HW26: Задание со *

    Подготовил сценарий создания кластера при помощи terraform согласно рекомендациям.
    Получил манифест для добавления прав доступа на kubernetes dashboard kubectl create clusterrolebinding kubernetes-dashboard --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard -o yaml --dry-r




    main.tf - основной конфиг, описывающий какие инстансы нам нужны
    variables.tf - конфиг с описанием переменных и значениями по дефолту, если дефолтных значений нет, то они являются обязательными
    terraform.tfvars - конфиг с значением переменных, часто является секретным, нужно с осторожностью пушить в публичные репозитарии
    outputs.tf - описание выходных переменных, необязательный файл, но очень удобно вычленять нужные параметры из созданного инстанса, например IP созданного в облаке инстанса


main.tf
provider "google" {
  credentials = file("~/account.json")
  version     = "~> 2.5"
  project     = var.gcp_project_id
  region      = var.gcp_location
}

Что включает создание кластера через терраформ
1. Настройка provider
2.

backend - для хранения tfstate файла
firewall


Сначала надо залогиниться или использовать файл из https://cloud.google.com/docs/authentication/production json и 
```


    In the Cloud Console, go to the Create service account key page.
    Go to the Create Service Account Key page
    From the Service account list, select New service account.
    In the Service account name field, enter a name.

    From the Role list, select Project > Owner.
    Note: The Role field authorizes your service account to access resources. You can view and change this field later by using the Cloud Console. If you are developing a production app, specify more granular permissions than Project > Owner. For more information, see granting roles to service accounts.
    Click Create. A JSON file that contains your key downloads to your computer.

```

Прописать его   
provider "google" {
  credentials = file("~/account.json")


Или
gcloud auth application-default login



terraform init
terraform plan
terraform apply

gcloud container clusters get-credentials k8s-platform --region us-west1 --project kuber-72586

garry@home-pc:~/devops_learn/kuber/terraform$ kubectl config  get-contexts
CURRENT   NAME                                             CLUSTER                                          AUTHINFO                                         NAMESPACE
          gke_docker-257312_europe-west1-b_my-cluster-29   gke_docker-257312_europe-west1-b_my-cluster-29   gke_docker-257312_europe-west1-b_my-cluster-29   
          gke_docker-257312_europe-west1_my-cluster-30     gke_docker-257312_europe-west1_my-cluster-30     gke_docker-257312_europe-west1_my-cluster-30     
*         gke_kuber-72586_us-west1_k8s-platform            gke_kuber-72586_us-west1_k8s-platform            gke_kuber-72586_us-west1_k8s-platform            
          minikube                                         minikube                                         minikube                                         
garry@home-pc:~/devops_learn/kuber/terraform$ kubectl get nodes
NAME                                               STATUS   ROLES    AGE     VERSION
gke-k8s-platform-k8s-platform-pool-372857e5-4b43   Ready    <none>   6m51s   v1.16.13-gke.1
gke-k8s-platform-k8s-platform-pool-5f273864-h9kb   Ready    <none>   6m53s   v1.16.13-gke.1
gke-k8s-platform-k8s-platform-pool-895eb37e-6z86   Ready    <none>   6m55s   v1.16.13-gke.1

